import "sync"

ok := true

wg := sync.WaitGroup{}
mu := sync.Mutex{}
x := 0
for i := 0; i < 5; i++ {
	wg.Add(1)
	go func(i int) {
		mu.Lock()
		x += i
		mu.Unlock()
		wg.Done()
	}(i)
}
wg.Wait()

if want := 0 + 1 + 2 + 3 + 4; x != want {
	printf("x=%d, want=%d\n", x, want)
	ok = false
}

ch := make(chan int, 5)
sendch := (chan<- int)(ch)
for i := 0; i < 5; i++ {
	go func(i int) {
		sendch <- i
	}(i)
}
recvch := (<-chan int)(ch)
y := 0
for i := 0; i < 5; i++ {
	y += <-recvch
}
if want := 0 + 1 + 2 + 3 + 4; y != want {
	printf("y=%d, want=%d\n", y, want)
	ok = false
}

if ok {
	print("OK")
}
